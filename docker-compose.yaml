version: "3.9"
services:
  backend:
    env_file: .env
    build:
      context: ./backend/
    ports:
      - 3000:3000   # default port
      - 3001:3001   # websockets
    networks:
      - webapp-network
    volumes:
      - backend_node_modules:/usr/src/app/node_modules
      - ./backend/public:/usr/src/app/public/
    depends_on:
      - db
    working_dir: /usr/src/app
    entrypoint: ["npm", "run", "start:dev"]

  db:
    container_name: db
    image: postgres:14.2
    ports:
      - 5432:5432
    networks:
      - webapp-network
    volumes:
      - dbdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWD}
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    logging:
      driver: none
    restart: always
    volumes:
      - pgadmindata:/var/tmp/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_MAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_PASSWD}
    networks:
      - webapp-network
    ports:
      - 5050:80
      
  frontend:
    container_name: frontend
    build:
      context: ./frontend/
    networks:
      - webapp-network
    volumes:
      - frontend_node_modules:/usr/src/node_modules
    depends_on:
      - backend
    working_dir: /usr/src/app


networks:
  webapp-network:
    driver: bridge

volumes:
  dbdata: {}
  pgadmindata: {}
  backend_node_modules: {}
  frontend_node_modules: {}

